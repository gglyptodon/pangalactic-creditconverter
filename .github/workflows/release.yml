name: Release
on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  quickcheck:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rustversion.outputs.rustversion }}
    steps:
    - uses: actions/checkout@v2
    - run: cargo check --manifest-path pangalacticcc/Cargo.toml
    - run: cargo pkgid --manifest-path pangalacticcc/Cargo.toml
    - run: 'echo "$(cargo pkgid --manifest-path pangalacticcc/Cargo.toml | cut -d# -f2)"'
    - id: rustversion
      run: 'echo "::set-output name=rustversion::$(cargo pkgid --manifest-path pangalacticcc/Cargo.toml | cut -d# -f2)"'
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          EXTRA_FILES: "README.md LICENSE"
          SRC_DIR: "pangalacticcc"
